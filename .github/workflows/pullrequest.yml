name: Build and Test Pull Requests

on:
  pull_request:
    branches:
    - main

jobs:
  unittests:
    name: "Build and Unit Test"

    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Restore Nuget Packages
      run: dotnet restore EstateManagementUI.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: |
        dotnet build EstateManagementUI.sln --configuration Release

    - name: Run Unit Tests
      run: |        
        dotnet test "EstateManagementUI.BusinessLogic.Tests\EstateManagementUI.BusinessLogic.Tests.csproj"  

  chrometests:
    name: "Build and Test UI - Chrome"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"
        NODE_VERSION: '14.x'                # set this to the node version to use

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Trust Certificate
      run: |
        sudo apt-get install expect
        certPath="$GITHUB_WORKSPACE/Certificates/aspnetapp-root-cert.pfx"
        password="password"

        # Use expect to automate the passphrase input
        expect -c "
        spawn openssl pkcs12 -in \"$certPath\" -clcerts -nokeys -out certificate.crt -password pass:\"$password\"
        expect \"Enter Import Password:\" { send \"$password\n\" }
        expect eof
        "

        expect -c "
        spawn openssl pkcs12 -in \"$certPath\" -nocerts -out private.key -password pass:\"$password\"
        expect \"Enter Import Password:\" { send \"$password\n\" }
        expect eof
        "

        sudo cp certificate.crt /usr/local/share/ca-certificates/aspnetapp-root-cert.crt
        sudo update-ca-certificates

        sudo cp private.key /etc/ssl/private/aspnetapp-root-cert.key
        sudo chmod 400 /etc/ssl/private/aspnetapp-root-cert.key    
            
    - name: Build Docker Image
      run: docker build . --file EstateAdministrationUI/Dockerfile --tag estateadministrationui:latest

    - name: Run Integration Tests (Chrome)
      env:
        Browser: Chrome
        IsCI: true
      run: dotnet test "EstateAdministrationUI.IntegrationTests\EstateAdministrationUI.IntegrationTests.csproj" --filter Category=PRTest
      
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: chrometracelogs
        path: C:\\Users\\runneradmin\\txnproc\\trace\\
