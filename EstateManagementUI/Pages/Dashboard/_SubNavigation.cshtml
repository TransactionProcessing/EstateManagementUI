@{
    bool isAuthenticated = User.Identity.IsAuthenticated;
    var page = ViewContext.RouteData.Values["page"]?.ToString() ?? string.Empty;
}

@{
    string GetCurrentPageClass(string prefix) =>
        page.StartsWith($"/{prefix}")
            ? "btn btn-sm btn-neutral btn-active"
            : "btn btn-sm btn-ghost";

    async Task RenderItem(string title, string name)
    {
        // <a asp-page="/@name/Index" class="@GetCurrentPageClass(name)">
        //     <partial name="Loading"/>
        //     @title
        // </a>
        <a class='nav-link' asp-page="/@name/Index">
            @switch (name)
            {
                case "Estate":
                    <i class="fa-solid fa-network-wired"></i>
                    break;
                    case "Merchant":
                    <i class="fa-solid fa-store"></i>
                    break;
                case "Contract":
                    <i class="fa-solid fa-file-contract"></i>
                    break;
                case "Operator":
                    <i class="fa-solid fa-building-columns"></i>
                    break;
                case "Reporting":
                    <i class="fa-solid fa-chart-simple"></i>
                    break;
                case "File Processing":
                    <i class="fa-solid fa-file-csv"></i>
                    break;
                    default:
                    <i class="fa-solid fa-gauge-high"></i>
                    break;
            }
            <partial name="Loading"/>
            <p>@title</p>
        </a>
    }
}
<ul class="navbar-nav">
    <li class="nav-item"> <a class="nav-link" data-lte-toggle="sidebar" href="#" role="button"> <i class="bi bi-list"></i> </a> </li>
    <li class="nav-item d-none d-md-block"> <a href="#" class="nav-link">test</a> </li>
    <li class="nav-item d-none d-md-block"> <a href="#" class="nav-link">test1</a> </li>
</ul> <!--end::Start Navbar Links--> <!--begin::End Navbar Links-->
