@using EstateManagementUI.BusinessLogic.PermissionService.Database.Entities
@model EditRole
@{
    async Task RenderTab(ApplicationSection applicationSection) {

        var id = $"ApplicationSection{applicationSection.ApplicationSectionId}-tab";
        var href = $"#ApplicationSection{applicationSection.ApplicationSectionId}";
        
        <li class="nav-item">
            <a class="nav-link active" id="@id" data-toggle="pill" href="@href" role="tab" aria-controls="custom-tabs-one-home" aria-selected="true">@applicationSection.Name</a>
        </li>
    }

    async Task RenderTabContent(ApplicationSection applicationSection, List<(Function, Boolean)> permissions) {
        var id = $"ApplicationSection{applicationSection.ApplicationSectionId}";
        <div class="tab-pane fade show active" id="@id" role="tabpanel" aria-labelledby="custom-tabs-one-home-tab">
            @foreach(var p in permissions){
                <p>@p.Item1.Name - @p.Item2 </p>
            }
        </div>
    }
}

<form class="flex flex-col flex-1" method="post">
  <div class="flex-1 overflow-y-auto">
    <div class="p-4">
      <div class="text-xl mb-3 font-bold">Edit role @Model.Id</div>
      
      @*<div class="card card-primary card-tabs">
          <div class="card-header p-0 pt-1">
                    <ul class="nav nav-tabs" id="custom-tabs-one-tab" role="tablist">
              @{
                  var applicationSections = Model.Permissions.Select(p => p.Item1).Distinct();
                  foreach (var appSection in applicationSections) {
                      await RenderTab(appSection);
                  }
              }
              </ul>
          </div> 
          
          <div class="card-body">
              <div class="tab-content" id="custom-tabs-one-tabContent">
              @{
                            foreach (var appSection in applicationSections) {
                                var permissions = Model.Permissions.Where(m => m.Item1.ApplicationSectionId == appSection.ApplicationSectionId).ToList();

                                var functions = permissions.Select(p => p.Item2).Single();
                                await RenderTabContent(appSection, functions);
                            }

                  }
              </div>
          </div>
      </div>*@
            <div class="card card-primary card-tabs">
                <div class="card-header p-0 pt-1">
                    <ul class="nav nav-tabs" id="custom-tabs-one-tab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="ApplicationSection1-tab" data-toggle="pill" href="#ApplicationSection1" role="tab" 
                               aria-controls="ApplicationSection1-tab" aria-selected="true">Dashboard</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="ApplicationSection2-tab" data-toggle="pill" href="#ApplicationSection2" role="tab" aria-controls="ApplicationSection2-tab" 
                               aria-selected="False">Estate</a>
                        </li>
                    </ul>
                </div>

                <div class="card-body">
                    <div class="tab-content" id="custom-tabs-one-tabContent">
                        <div class="tab-pane fade show active" id="ApplicationSection1" role="tabpanel" aria-labelledby="ApplicationSection1">
                            <p>Dashboard - False </p>
                        </div>
                        <div class="tab-pane fade" id="ApplicationSection2" role="tabpanel" aria-labelledby="ApplicationSection2">
                            <p>View Estate - False </p>
                            <p>Edit Estate - False </p>
                            <p>Add Operator - False </p>
                            <p>Remove Operator - False </p>
                            <p>Add User - False </p>
                            <p>Remove User - False </p>
                        </div>
                    </div>
                </div>
            </div>
  </div>
  <div class="flex p-4 gap-2">
    <button class="btn btn-primary" type="submit" hydro-on:click="@(() => Model.Save())">
      <span class="loading loading-spinner loading-sm spinner" aria-hidden="true"></span>
      <span>Save changes</span>
    </button>

    <button type="button" class="btn btn-outline-secondary" hydro-on:click="@(() => Model.Back())">
      <span class="loading loading-spinner loading-sm spinner" aria-hidden="true"></span>
      Cancel
    </button>

    @* <div class="dropdown dropdown-top">
      <div tabindex="0" class="btn btn-ghost">Remove</div>
      <ul tabindex="0" class="p-2 shadow menu menu-sm dropdown-content z-[1] bg-base-100 border border-base-200 rounded">
        <li>
          <a href="#" hydro-on:click="@(() => Model.Remove())">Confirm</a>
        </li>
      </ul>
    </div> *@
  </div>
</form>