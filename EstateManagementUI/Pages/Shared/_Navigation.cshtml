@{
    bool isAuthenticated = User.Identity.IsAuthenticated;
    var page = ViewContext.RouteData.Values["page"]?.ToString() ?? string.Empty;
}

@{
    string GetCurrentPageClass(string prefix) =>
        page.StartsWith($"/{prefix}")
            ? "btn btn-sm btn-neutral btn-active"
            : "btn btn-sm btn-ghost";

    async Task RenderItem(string title, string name)
    {
        <a asp-page="/@name/Index" class="@GetCurrentPageClass(name)">
            <partial name="Loading"/>
            @title
        </a>
    }
}


<div class="bg-base-200 rounded text-center p-4 m-8">
    @if (isAuthenticated)
{
    <div class="navbar bg-base-100 shadow-xl z-[100]">
        <div class="flex-none">
            <a class="btn btn-ghost text-xl no-animation" href="/">Estate Management UI</a>
        </div>
        <div class="flex-1 flex gap-2" hydro-link>
            @{
                await RenderItem("My Estate", "Estate");
                await RenderItem("My Merchants", "Merchant");
                await RenderItem("My Contracts", "Contract");
                await RenderItem("My Operators", "Operator");
                    await RenderItem("Reports", "Reporting");
                    await RenderItem("FileProcessing", "File Processing");
            }
        </div>
        <div class="flex-none">
            <ul class="menu menu-horizontal">
                <li>
                    <hydro name="ProfileDropdown" />
                </li>
            </ul>
        </div>
    </div>
}
else
{
<div class="d-flex justify-content-center p-4">
            <p>Please log in to access this content.</p>
    @* <button class="btn btn-primary mx-2" hydro-on:click="@(() => Model.Register())">Create demo space</button> *@
</div>
}
</div>