@using EstateManagementUI.ViewModels
@model EstateManagementUI.Pages.Contract.ContractsList

@{
    string GetSorting(ContractSorting sorting) =>
        Model.Sorting.Column == sorting
            ? Model.Sorting.Ascending ? "\u2193" : "\u2191"
            : null;
}

<table class="table table-sm" id="contractList">
    <thead class="thead-light">
        <tr class="d-flex">
            <th hydro-action="Sort" param-value="@ContractSorting.Description" role="button" class="col-3">
                Description @GetSorting(ContractSorting.Description)
            </th>
            <th hydro-action="Sort" param-value="@ContractSorting.Operator" role="button" class="col-2">
                Operator @GetSorting(ContractSorting.Operator)
            </th>
            <th hydro-action="Sort" param-value="@ContractSorting.NumberOfProducts" role="button" class="col-1">
                Products @GetSorting(ContractSorting.NumberOfProducts)
            </th>
            <th class="col-1"></th>
        </tr>
    </thead>
    <tbody>
    @foreach (Contract contractModel in Model.Contracts)
    {
            <tr class="hover d-flex">
                <td class="col-3">
                    @contractModel.Description
            </td>
            <td class="col-2">
                @contractModel.OperatorName
            </td>
            <td class="col-1">
                @contractModel.NumberOfProducts
            </td>
            <td class="col-1">
            </td>
            @* <td class="align-middle text-end">
                @{
                    var menuItems = new TableDropdownItem[]
                    {
                        new("Edit", () => Model.Edit(product.Id))
                    };
                }

                <partial name="TableDropdown" model="@menuItems" />
            </td> *@
        </tr>
    }
    </tbody>
</table>